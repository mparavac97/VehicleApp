{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Snje\\u017Eana\\\\Desktop\\\\VehiclesApp\\\\Vehicles\\\\Vehicles Frontend\\\\vehicles-app\\\\src\\\\Components\\\\ModalForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalForm(props) {\n  _s();\n  const [modal, setModal] = useState(false);\n  function toggle() {\n    setModal(!modal);\n  }\n  const closeButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"close\",\n    onClick: toggle,\n    children: \"\\xD7\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this);\n  const label = props.buttonLabel;\n  let button = null;\n  let title = '';\n  if (label === 'Edit') {\n    button = /*#__PURE__*/_jsxDEV(Button, {\n      color: \"warning\",\n      onClick: toggle,\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this);\n    title = 'Edit item';\n  } else {\n    button = /*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      onClick: toggle,\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this);\n    title = 'Add New Item';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [button, /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle /*className={props.className}*/,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        close: closeButton,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: \"yepge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n_s(ModalForm, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = ModalForm;\nexport default ModalForm;\nvar _c;\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"names":["useState","Button","Modal","ModalHeader","ModalBody","ModalForm","props","modal","setModal","toggle","closeButton","label","buttonLabel","button","title","float","marginRight"],"sources":["C:/Users/Snje≈æana/Desktop/VehiclesApp/Vehicles/Vehicles Frontend/vehicles-app/src/Components/ModalForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nfunction ModalForm(props: {\r\n    buttonLabel: any; item: any;\r\n}) {\r\n    \r\n    const [modal, setModal] = useState(false)\r\n\r\n    function toggle() {\r\n        setModal(!modal)\r\n    }\r\n\r\n    const closeButton = <button className=\"close\" onClick={toggle}>&times;</button>\r\n    const label = props.buttonLabel\r\n\r\n    let button: any = null\r\n    let title = ''\r\n\r\n    if (label === 'Edit'){\r\n        button = <Button\r\n                    color=\"warning\"\r\n                    onClick={toggle}\r\n                    style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Edit item'\r\n    }\r\n    else {\r\n        button = <Button\r\n                    color=\"success\"\r\n                    onClick={toggle}\r\n                    style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Add New Item'\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                {button}\r\n                <Modal isOpen={modal} toggle={toggle} /*className={props.className}*/ >\r\n                    <ModalHeader toggle={toggle} close={closeButton}>{title}</ModalHeader>\r\n                    <ModalBody>\r\n                        yepge\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default ModalForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,QAAQ,YAAY;AAAC;AAEnE,SAASC,SAAS,CAACC,KAElB,EAAE;EAAA;EAEC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzC,SAASS,MAAM,GAAG;IACdD,QAAQ,CAAC,CAACD,KAAK,CAAC;EACpB;EAEA,MAAMG,WAAW,gBAAG;IAAQ,SAAS,EAAC,OAAO;IAAC,OAAO,EAAED,MAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EAC/E,MAAME,KAAK,GAAGL,KAAK,CAACM,WAAW;EAE/B,IAAIC,MAAW,GAAG,IAAI;EACtB,IAAIC,KAAK,GAAG,EAAE;EAEd,IAAIH,KAAK,KAAK,MAAM,EAAC;IACjBE,MAAM,gBAAG,QAAC,MAAM;MACJ,KAAK,EAAC,SAAS;MACf,OAAO,EAAEJ,MAAO;MAChB,KAAK,EAAE;QAACM,KAAK,EAAE,MAAM;QAAEC,WAAW,EAAC;MAAM,CAAE;MAAA,UAAEL;IAAK;MAAA;MAAA;MAAA;IAAA,QAC7C;IACjBG,KAAK,GAAG,WAAW;EACvB,CAAC,MACI;IACDD,MAAM,gBAAG,QAAC,MAAM;MACJ,KAAK,EAAC,SAAS;MACf,OAAO,EAAEJ,MAAO;MAChB,KAAK,EAAE;QAACM,KAAK,EAAE,MAAM;QAAEC,WAAW,EAAC;MAAM,CAAE;MAAA,UAAEL;IAAK;MAAA;MAAA;MAAA;IAAA,QAC7C;IACjBG,KAAK,GAAG,cAAc;EAC1B;EAEA,oBACQ;IAAA,WACKD,MAAM,eACP,QAAC,KAAK;MAAC,MAAM,EAAEN,KAAM;MAAC,MAAM,EAAEE,MAAO,CAAC;MAAA,wBAClC,QAAC,WAAW;QAAC,MAAM,EAAEA,MAAO;QAAC,KAAK,EAAEC,WAAY;QAAA,UAAEI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAe,eACtE,QAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAElB;AAAC,GA5CQT,SAAS;AAAA,KAATA,SAAS;AA+ClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}